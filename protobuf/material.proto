syntax = "proto3";
package trc.serial;

import "vector_types.proto";
import "asset_reference.proto";
import "material_shader_program.proto";

message SimpleMaterial
{
    vec3 color = 1;

    float specular_koefficient = 2;
    float roughness = 3;
    float metallicness = 4;

    float opacity = 5;
    float reflectivity = 6;

    bool emissive = 7;

    optional AssetReference albedo_texture = 8;
    optional AssetReference normal_texture = 9;
}

message MaterialProgramSpecializations
{
    message Specialization
    {
        ShaderProgram shader_program = 1;
        bool animated = 2;
    }

    // Specializations at their respective indices as defined by MaterialKey's
    // MaterialSpecializationFlags structure.
    // Currently, all specializations must be present, i.e., precomputed in
    // order the be serialized. This is mostly because we cannot serialize
    // shader modules right now.
    repeated Specialization specializations = 1;
}

// The enum values/indices are the integer values of the corresponding
// Vulkan flag bits
enum PolygonMode
{
    FILL = 0;
    LINE = 1;
    POINT = 2;
}

enum CullMode
{
    NONE           = 0x00;
    FRONT          = 0x01;
    BACK           = 0x02;
    FRONT_AND_BACK = 0x03;
}

message Material
{
    // These are mostly settings for Vulkan pipelines.
    message Settings
    {
        bool transparent = 1;

        optional PolygonMode polygon_mode = 2;
        optional float line_width = 3;

        optional CullMode cull_mode = 4;
        optional bool front_face_clockwise = 5;

        optional bool depth_write = 6;
        optional bool depth_test = 7;
        optional float depth_bias_constant_factor = 8;
        optional float depth_bias_slope_factor = 9;
    }

    message RuntimeValueDefault
    {
        uint32 push_constant_id = 1;
        bytes data = 2;
    }

    Settings settings = 1;
    MaterialProgramSpecializations specializations = 2;
    repeated RuntimeValueDefault runtime_values = 3;
}
