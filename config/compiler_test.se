Meta:
    Namespace: "my_ns"


enum AnimationType:
    none,
    simple,

enum Foo:
    bar,
    baz,
    ban

Shader drawableDeferredAnimated:
    Source: "drawable/deferred.vert"
    Variable animation: "applyAnimation(...)"



String variantPath: match Foo
    bar -> "config/test.vert"
    baz -> "config/test.vert"
    ban -> "config/test.vert"

Shader drawableDeferredDoubleMatched:
    Source: variantPath
    Variable animation: match AnimationType
        none -> ""
        simple -> "applyAnimation(...)"


Program drawableProgram:
    VertexShader: match AnimationType
        none ->
            Source: "drawable/deferred.vert"
            Variable animation: ""
        simple -> drawableDeferredAnimated
    FragmentShader:
        Source: "shaders/drawable/deferred.frag"

VertexAttribute drawableVertexAttribute:
    Locations: match AnimationType
        none -> [rgb32f, rgb32f, rg32f, rgb32f]
        simple -> [rgb32f, rgb32f, rg32f, rgb32f,  // default attribs
                   rgba32u, rgba32f]               // animation-specific attribs


ColorBlendAttachment myBlendAttachment:
    ColorBlending: true
    SrcAlphaFactor: oneMinusDstAlpha
    ColorComponents: match AnimationType
        none -> [red, blue]
        simple -> [alpha]

ColorBlendAttachment disabledBlending:
    ColorBlending: false

Pipeline drawable:
    Program: drawableProgram
    VertexInput: [drawableVertexAttribute]
    ColorBlendAttachments: [disabledBlending, myBlendAttachment, disabledBlending]
    DynamicState: ["eFrontFace", "eScissor"]
