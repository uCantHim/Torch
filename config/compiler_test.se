// Name of property of global object
Meta:
    BaseDir: "./shaders"


enum AnimationType:
    none,
    simple,

enum Foo:
    bar,
    baz,
    ban

String vertexShaderPath: "config/test_second.vert"

Shader drawable_deferred: match AnimationType
    none ->
        Source: vertexShaderPath
    simple ->
        Source: vertexShaderPath

// Is equivalent to:
Shader drawable_deferred_static:
    Source: "drawable/deferred.vert"
    Variable animation: ""

Shader drawable_deferred_animated:
    Source: "drawable/deferred.vert"
    Variable animation: "applyAnimation(...)"



String variantPath: match Foo
    bar -> "config/test.vert"
    baz -> "config/test.vert"
    ban -> "config/test.vert"

Shader drawable_deferred_double_matched:
    Source: variantPath
    Variable animation: match AnimationType
        none -> ""
        simple -> "applyAnimation(...)"


Program drawableProgram:
    VertexShader: match AnimationType
        none ->
            Source: "drawable/deferred.vert"
            Variable animation: ""
        simple -> drawable_deferred_animated
    FragmentShader:
        Source: "shaders/drawable/deferred.frag"

VertexAttribute drawableVertexAttributes: match AnimationType
    none ->
        // Binding: 0,
        Locations: [rgb32f, rgb32f, rg32f, rgb32f,  // default attribs
                    rgba32u, rgba32f]               // animation-specific attribs
    simple ->
        // Binding: 0,
        Locations: [rgb32f, rgb32f, rg32f, rgb32f]


Pipeline drawable:
    Program: drawableProgram
    VertexInput: [drawableVertexAttributes]
