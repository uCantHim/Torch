// Name of property of global object
Meta:
    BaseDir: ./shaders

enum AnimationType:
    none,
    simple,

enum ViewTransform:
    default,
    billboard,


<AnimationType, ViewTransform>   // <-- should this be implicit?
Shader drawable_deferred:
    Source: drawable/deferred.vert
    Interfaces: [asset_registry]
    Variable animation: match AnimationType
        none -> ""
        simple -> "applyAnimation(...)"


// Is equivalent to:
Shader drawable_deferred_static:
    Source: drawable/deferred.vert
    Interfaces: [asset_registry]
    Variable animation: ""

Shader drawable_deferred_animated:
    Source: drawable/deferred.vert
    Interfaces: [asset_registry]
    Variable animation: "applyAnimation(...)"



// All objects can be declared as 'explicit' objects with identifiers.
// Object properties defined by only the typename are 'ad-hoc' objects
// that simply don't have an identifier and therefore cannot be reused.
VertexInput meshVertex:
    ...


<AnimationType>
Pipeline drawable:
    VertexShader: match AnimationType
        none -> drawable_deferred_static
        simple -> drawable_deferred_animated
    VertexInput: match AnimationType
        none -> meshVertex
        simple -> skeletalVertex
    // or:
    VertexInput: meshVertex

// Or, this is an advanced language feature:
<AnimationType>
Pipeline drawable:
    VertexShader: drawable_deferred[ViewTransform: default]  // Partial template specialization
    VertexShader: drawable_deferred<ViewTransform: default>  // Partial template specialization
    VertexInput: match AnimationType
        none   -> meshVertex
        simple -> skeletalVertex

Pipeline hitbox:
    Base: drawable[AnimationType: none]
    PolygonMode: line


// Fundamental types:
type String


// Type declaration:
type Shader:
    Source :: String
    Variable :: Map<String>
    // Or:
    Variable :: String...

enum VertexInput:
    ...
enum PolygonMode:
    ...

type Pipeline:
    Base :: Pipeline
    VertexShader :: Shader
    VertexInput :: VertexInput
    PolygonMode :: PolygonMode
