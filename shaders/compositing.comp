#version 460

#include "material.glsl"

layout (local_size_x = 10, local_size_y = 10) in;

layout (set = 0, binding = 0, rgba8) uniform image2D outputImage;
layout (set = 0, binding = 1, rgba8) readonly uniform image2D rayBufferReflection;

void main()
{
    const ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);

    const vec4 rasterColor = imageLoad(outputImage, pixelCoords);
    vec4 color = rasterColor;

    // The reflection image stores the reflecting material's
    // reflectivity in the alpha channel
    vec4 reflectColor = imageLoad(rayBufferReflection, pixelCoords);
    if (reflectColor.a > 0.0f)
    {
        color = mix(rasterColor, reflectColor, reflectColor.a);
    }

    imageStore(outputImage, pixelCoords, color);
}
